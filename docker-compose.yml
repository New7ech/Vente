# version: "3.8"

services:
  # Application Laravel (PHP-FPM)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel-app:dev
    working_dir: /var/www
    volumes:
      - ./:/var/www   # code source synchronisé
    env_file:
      - .env          # variables d'environnement
    depends_on:
      - mysql
      - redis
    networks:
      - app-network

  # Serveur Nginx (dev)
  nginx:
    image: nginx:stable-alpine
    ports:
      - "8000:80"     # http://localhost:8000 -> Nginx -> PHP-FPM
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro  # config Nginx pour Laravel
      - ./:/var/www:ro
    depends_on:
      - app
    networks:
      - app-network

  # Base de données MySQL avec volume persistant
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_data_dev:/var/lib/mysql  # persistance données
    ports:
      - "3307:3306"   # accès MySQL depuis hôte (optionnel)
    networks:
      - app-network

  # Redis pour cache et file d'attente
  redis:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data_dev:/data   # persistance données Redis (appendonly)
    ports:
      - "6379:6379"
    networks:
      - app-network

  # MailHog pour tester les e-mails en dev
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # Web UI
    networks:
      - app-network

  # phpMyAdmin (optionnel, pour accéder à MySQL via navigateur)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: secret
    ports:
      - "8081:80"     # http://localhost:8081 -> phpMyAdmin
    depends_on:
      - mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data_dev:
  redis_data_dev:
